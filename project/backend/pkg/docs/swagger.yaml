basePath: /api/v0
definitions:
  models.Auth:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
      username:
        type: string
    required:
    - password
    type: object
  models.HTTP:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  models.StatusList:
    properties:
      code:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  models.Token:
    properties:
      id:
        type: integer
      token:
        type: string
    type: object
  models.UserCreate:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
      role:
        type: integer
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.UserList:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
  models.UserUpdate:
    properties:
      email:
        type: string
      name:
        type: string
      role:
        type: integer
      username:
        type: string
    type: object
host: localhost:9999
info:
  contact:
    email: support@rhuanpk.com
    name: Rhuan Patriky
    url: https://linktr.ee/rhuanpk
  description: API for OpenFinance project.
  title: OpenFinance API
  version: 0.0.0
paths:
  /auth:
    get:
      description: Get the user id from your token.
      parameters:
      - description: Bearer token.
        in: header
        name: TOKEN
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTP'
      summary: PROPERTIES
      tags:
      - auth
    post:
      consumes:
      - application/json
      description: Log-in and get a authentication token (JWT).
      parameters:
      - description: Json request.
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/models.Auth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.HTTP'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTP'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.HTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTP'
      summary: LOGIN
      tags:
      - auth
  /status:
    get:
      description: List all available status to use.
      parameters:
      - description: Bearer token.
        in: header
        name: TOKEN
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.StatusList'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTP'
      summary: LIST
      tags:
      - status
  /user:
    delete:
      description: Deactivate many or all user.
      parameters:
      - description: Bearer token.
        in: header
        name: TOKEN
        required: true
        type: string
      - collectionFormat: csv
        description: User ID's.
        in: query
        items:
          type: integer
        name: users
        type: array
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTP'
      summary: DELETE
      tags:
      - user
    get:
      description: List all users.
      parameters:
      - description: Bearer token.
        in: header
        name: TOKEN
        required: true
        type: string
      - description: User name.
        in: query
        name: name
        type: string
      - description: User username.
        in: query
        name: username
        type: string
      - description: User email.
        in: query
        name: email
        type: string
      - description: User role.
        in: query
        name: role
        type: integer
      - description: Bring the inactive ones.
        in: query
        name: inactives
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserList'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTP'
      summary: LIST
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: Bearer token.
        in: header
        name: TOKEN
        required: true
        type: string
      - description: Json request.
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserList'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.HTTP'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.HTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTP'
      summary: CREATE
      tags:
      - user
  /user/{user}:
    delete:
      description: Deactivate a single user.
      parameters:
      - description: Bearer token.
        in: header
        name: Token
        required: true
        type: string
      - description: User ID.
        in: path
        name: user
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTP'
      summary: DELETE
      tags:
      - user
    get:
      description: Get a single user from ID.
      parameters:
      - description: Bearer token.
        in: header
        name: TOKEN
        required: true
        type: string
      - description: User ID.
        in: path
        name: user
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTP'
      summary: GET
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Update already existing user.
      parameters:
      - description: Bearer token.
        in: header
        name: TOKEN
        required: true
        type: string
      - description: User ID.
        in: path
        name: user
        required: true
        type: integer
      - description: Reactivate an inactive user.
        in: query
        name: reactivate
        type: boolean
      - description: Json request.
        in: body
        name: JSON
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdate'
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.HTTP'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HTTP'
      summary: UPDATE
      tags:
      - user
swagger: "2.0"
